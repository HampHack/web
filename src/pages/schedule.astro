---
import Layout from "../components/Layout.astro";
import Airtable from "airtable";

const table = new Airtable({
  apiKey: import.meta.env.AIRTABLE_API_KEY,
}).base(import.meta.env.AIRTABLE_BASE_ID)("Schedule");

const schedule = await table
  .select({
    view: "Grid view",
  })
  .all();

const parsedSchedule = schedule.map((event) => {
  const { fields } = event;
  return {
    name: fields.Name,
    type: fields.Type,
    start: new Date(fields.Start as string),
    end: new Date(fields.End as string),
    notes: fields["Public Notes"],
  };
});

// finalSchedule should be an array of objects with the following structure:
// {
//   day: "Friday, April 21st",
//   events: [
//     {
//       name: "Opening Ceremony",
//       type: "Event",
//       start: "10:00 AM",
//       end: "10:30 AM",
//       notes: "Join us for the opening ceremony of HampHack 2021!"
//     },
//  ]
// }
const finalSchedule = parsedSchedule
  .map((event) => {
    const { start } = event;
    const day = start.toLocaleDateString("en-US", {
      weekday: "long",
      month: "long",
      day: "numeric",
    });
    return {
      day,
      events: [event],
    };
  })
  .reduce((acc, curr) => {
    const { day } = curr;
    const existing = acc.find((event) => event.day === day);
    if (existing) {
      existing.events.push(...curr.events);
    } else {
      acc.push(curr);
    }
    return acc;
  }, [] as { day: string; events: any[] }[]);
---

<Layout>
  <h1
    class="flex w-full text-center justify-center items-center uppercase font-black md:text-6xl text-4xl dark:text-white text-black"
  >
    Schedule
    <img
      src="/Icon.svg"
      class="md:h-12 h-8 transition hover:rotate-180 duration-200"
      alt="HampHack Lightning Bolt"
    />
  </h1>

  <p class="dark:text-white text-black font-semibold text-center">
    Times are in Eastern Time (ET). All times are subject to change. Please
    check back for updates.
  </p>

  <section
    id="schedule"
    class="dark:text-white text-black space-y-2 mx-auto max-w-7xl px-8 md:px-16"
  >
    <div class="grid md:grid-cols-3 grid-cols-1 gap-3">
      {
        finalSchedule.map((day) => (
          <div class="flex flex-col space-y-4">
            <h2 class="text-2xl font-bold">{day.day}</h2>

            {day.events
              .sort((a, b) => a.start.getTime() - b.start.getTime())
              .map((event) => (
                <div class="flex flex-col space-y-2 p-2 border-gray-700 border rounded-md">
                  <div class="grid grid-cols-5">
                    <div class="flex flex-col space-y-2 col-span-3">
                      <h3 class="text-xl font-bold">{event.name}</h3>
                      <p class="text-sm font-semibold">
                        {event.start.toLocaleTimeString("en-US", {
                          hour: "numeric",
                          minute: "numeric",
                        })}
                        {" - "}
                        {event.end.toLocaleTimeString("en-US", {
                          hour: "numeric",
                          minute: "numeric",
                        })}
                      </p>
                    </div>
                    <p class="text-sm font-semibold text-right col-span-2">
                      {event.type}
                    </p>
                  </div>
                  {event.notes && <p class="text-sm">{event.notes}</p>}
                </div>
              ))}
          </div>
        ))
      }
    </div>
  </section>
</Layout>
